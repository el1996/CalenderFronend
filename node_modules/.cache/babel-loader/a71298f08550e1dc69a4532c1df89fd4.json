{"ast":null,"code":"var _jsxFileName = \"/Users/omarhmdea/Documents/calendar-front/src/pages/calendar/Calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from \"react\";\nimport Sidebar from \"../../components/Sidebar\";\nimport { getMonth } from \"../../utils/util\";\nimport CalendarHeader from \"../../components/CalendarHeader\";\nimport Month from \"../../components/Month\";\nimport GlobalContext from \"../../context/GlobalContext\";\nimport EventModal from \"../../components/EventModal\";\nimport SettingModal from \"../../components/SettingModal\";\nimport NotificationService from \"../../services/NotificationService\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport SockJS from \"sockjs-client\";\nimport { over } from \"stompjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet stompClient = null;\nconst Calendar = () => {\n  _s();\n  const [currenMonth, setCurrentMonth] = useState(getMonth());\n  const {\n    monthIndex,\n    showEventModal,\n    showSettingModal,\n    setNotificationSetting\n  } = useContext(GlobalContext);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    setCurrentMonth(getMonth(monthIndex));\n  }, [monthIndex]);\n  function getSetting() {\n    NotificationService.getNotificationSetting(currentUser.token).then(res => {\n      var _res$data;\n      setNotificationSetting((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.data);\n    }).catch(error => {\n      var _error$response;\n      console.log(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.errors);\n    });\n  }\n  function connect() {\n    let Sock = new SockJS(\"http://localhost:8080/ws\");\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  }\n  const onConnected = () => {\n    stompClient.subscribe(\"/user/\" + currentUser.user.email + \"/private\", onReceiveNotification);\n  };\n  const onReceiveNotification = payload => {\n    //const payloadData = JSON.parse(payload.body);\n\n    // if (payloadData.sender.id === selectedTabRef.current.id) {\n    // \tsetSelectedTabHistory([\n    // \t\t...selectedTabHistoryRef.current,\n    // \t\tpayloadData,\n    // \t]);\n    // }\n\n    alert(payload.body);\n\n    // if (!tabs.some((tab) => tab.id === payloadData.sender.id)) {\n    // \tsetTabs([...tabs, payloadData.sender]);\n    // }\n  };\n\n  const onError = err => {\n    console.log(err);\n  };\n  useEffect(() => {\n    getSetting();\n    connect();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [showEventModal && /*#__PURE__*/_jsxDEV(EventModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }, this), showSettingModal && /*#__PURE__*/_jsxDEV(SettingModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(CalendarHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-1\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Month, {\n          month: currenMonth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }, this);\n};\n\n// function sendNotification(selectedEvent, message) {\n\n// \tselectedEvent.guests.forEach((guest) => {\n// \t\tconst notificationDetails = {\n// \t\t\tguest: guest.user,\n// \t\t\tmessage,\n// \t\t\teventId: selectedEvent.id,\n// \t\t\tnotificationType: \"UPDATE_EVENT\",\n// \t\t};\n// \t\tif (stompClient) {\n// \t\t\tstompClient.send(\n// \t\t\t\t\"/app/event-notification\",\n// \t\t\t\t{},\n// \t\t\t\tJSON.stringify(notificationDetails)\n// \t\t\t);\n// \t\t}\n// \t});\n// }\n_s(Calendar, \"9r1hguwgFYk4SZK6PbRhyxp1DkQ=\");\n_c = Calendar;\nfunction sendNotification(selectedEvent, message, type) {\n  const notificationDetails = {\n    message,\n    event: selectedEvent,\n    notificationType: type\n  };\n  if (stompClient) {\n    stompClient.send(\"/app/event-notification\", {}, JSON.stringify(notificationDetails));\n  }\n}\nexport { Calendar, sendNotification };\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useContext","useState","useEffect","Sidebar","getMonth","CalendarHeader","Month","GlobalContext","EventModal","SettingModal","NotificationService","AuthContext","SockJS","over","stompClient","Calendar","currenMonth","setCurrentMonth","monthIndex","showEventModal","showSettingModal","setNotificationSetting","currentUser","getSetting","getNotificationSetting","token","then","res","data","catch","error","console","log","response","errors","connect","Sock","onConnected","onError","subscribe","user","email","onReceiveNotification","payload","alert","body","err","sendNotification","selectedEvent","message","type","notificationDetails","event","notificationType","send","JSON","stringify"],"sources":["/Users/omarhmdea/Documents/calendar-front/src/pages/calendar/Calendar.jsx"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport Sidebar from \"../../components/Sidebar\";\nimport { getMonth } from \"../../utils/util\";\nimport CalendarHeader from \"../../components/CalendarHeader\";\nimport Month from \"../../components/Month\";\nimport GlobalContext from \"../../context/GlobalContext\";\nimport EventModal from \"../../components/EventModal\";\nimport SettingModal from \"../../components/SettingModal\";\nimport NotificationService from \"../../services/NotificationService\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport SockJS from \"sockjs-client\";\nimport { over } from \"stompjs\";\n\nlet stompClient = null;\n\nconst Calendar = () => {\n\tconst [currenMonth, setCurrentMonth] = useState(getMonth());\n\tconst {\n\t\tmonthIndex,\n\t\tshowEventModal,\n\t\tshowSettingModal,\n\t\tsetNotificationSetting,\n\t} = useContext(GlobalContext);\n\tconst { currentUser } = useContext(AuthContext);\n\n\tuseEffect(() => {\n\t\tsetCurrentMonth(getMonth(monthIndex));\n\t}, [monthIndex]);\n\n\tfunction getSetting() {\n\t\tNotificationService.getNotificationSetting(currentUser.token)\n\t\t\t.then((res) => {\n\t\t\t\tsetNotificationSetting(res.data?.data);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error?.response?.data.errors);\n\t\t\t});\n\t}\n\tfunction connect() {\n\t\tlet Sock = new SockJS(\"http://localhost:8080/ws\");\n\t\tstompClient = over(Sock);\n\t\tstompClient.connect({}, onConnected, onError);\n\t}\n\n\tconst onConnected = () => {\n\t\tstompClient.subscribe(\n\t\t\t\"/user/\" + currentUser.user.email + \"/private\",\n\t\t\tonReceiveNotification\n\t\t);\n\t};\n\n\tconst onReceiveNotification = (payload) => {\n\t\t//const payloadData = JSON.parse(payload.body);\n\n\t\t// if (payloadData.sender.id === selectedTabRef.current.id) {\n\t\t// \tsetSelectedTabHistory([\n\t\t// \t\t...selectedTabHistoryRef.current,\n\t\t// \t\tpayloadData,\n\t\t// \t]);\n\t\t// }\n\n\t\talert(payload.body);\n\n\t\t// if (!tabs.some((tab) => tab.id === payloadData.sender.id)) {\n\t\t// \tsetTabs([...tabs, payloadData.sender]);\n\t\t// }\n\t};\n\n\tconst onError = (err) => {\n\t\tconsole.log(err);\n\t};\n\tuseEffect(() => {\n\t\tgetSetting();\n\t\tconnect();\n\t}, []);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{showEventModal && <EventModal />}\n\t\t\t{showSettingModal && <SettingModal />}\n\t\t\t<div className=\"h-screen flex flex-col\">\n\t\t\t\t<CalendarHeader />\n\t\t\t\t<div className=\"flex flex-1\">\n\t\t\t\t\t<Sidebar />\n\t\t\t\t\t<Month month={currenMonth} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\n// function sendNotification(selectedEvent, message) {\n\n// \tselectedEvent.guests.forEach((guest) => {\n// \t\tconst notificationDetails = {\n// \t\t\tguest: guest.user,\n// \t\t\tmessage,\n// \t\t\teventId: selectedEvent.id,\n// \t\t\tnotificationType: \"UPDATE_EVENT\",\n// \t\t};\n// \t\tif (stompClient) {\n// \t\t\tstompClient.send(\n// \t\t\t\t\"/app/event-notification\",\n// \t\t\t\t{},\n// \t\t\t\tJSON.stringify(notificationDetails)\n// \t\t\t);\n// \t\t}\n// \t});\n// }\n\nfunction sendNotification(selectedEvent, message, type) {\n\tconst notificationDetails = {\n\t\tmessage,\n\t\tevent: selectedEvent,\n\t\tnotificationType: type,\n\t};\n\tif (stompClient) {\n\t\tstompClient.send(\n\t\t\t\"/app/event-notification\",\n\t\t\t{},\n\t\t\tJSON.stringify(notificationDetails)\n\t\t);\n\t}\n}\n\nexport { Calendar, sendNotification };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}