{"ast":null,"code":"var _jsxFileName = \"/Users/omarhmdea/Documents/calendar-front/src/context/ContextWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer, useMemo, useContext } from \"react\";\nimport GlobalContext from \"./GlobalContext\";\nimport dayjs from \"dayjs\";\nimport EventService from \"../services/EventService\";\nimport { AuthContext } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SavedEventsReducer = (state, _ref) => {\n  let {\n    type,\n    payload\n  } = _ref;\n  switch (type) {\n    case \"push\":\n      return [...state, payload];\n    case \"update\":\n      return state.map(evt => evt.id === payload.id ? payload : evt);\n    case \"delete\":\n      return state.filter(evt => evt.id !== payload.id);\n    default:\n      throw new Error();\n  }\n};\n_c = SavedEventsReducer;\nfunction initEvents() {\n  //const storageEvents = localStorage.getItem(\"savedEvents\");\n  // const parsedEvents = storageEvents ? JSON.parse(storageEvents) : [];\n  // return parsedEvents;\n  return [];\n}\nexport default function ContextWrapper(props) {\n  _s();\n  const [monthIndex, setMonthIndex] = useState(dayjs().month());\n  const [smallCalendarMonth, setSmallCalendarMonth] = useState(null);\n  const [daySelected, setDaySelected] = useState(dayjs());\n  const [showEventModal, setShowEventModal] = useState(false);\n  const [showSettingModal, setShowSettingModal] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [labels, setLabels] = useState([]);\n  const [savedEvents, dispatchCalEvent] = useReducer(SavedEventsReducer, [], initEvents);\n  const [savedCalendars, setSavedCalendars] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [notificationSetting, setNotificationSetting] = useState(null);\n  const filteredEvents = useMemo(() => {\n    return savedEvents.filter(evt => labels.filter(lbl => lbl.checked).map(lbl => lbl.label).includes(evt.label));\n  }, [savedEvents, labels]);\n\n  // useEffect(() => {\n  // \tlocalStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\n  // }, [savedEvents]);\n\n  // useEffect(() => {\n  // \tasync function getMyEvents() {\n  // \t\tconst response = await EventService.getMyEvents(\n  // \t\t\t12,\n  // \t\t\t2022,\n  // \t\t\tcurrentUser?.token\n  // \t\t);\n  // \t\tconsole.log(\"My events\");\n  // \t\tconsole.log(response);\n  // \t\t// response.data?.data.map((evt) => {\n  // \t\t// \tif (evt.label === undefined) {\n  // \t\t// \t\tevt.label = \"red\";\n  // \t\t// \t}\n  // \t\t// });\n  // \t\t// setLabels(response.data?.data);\n  // \t}\n  // \tif (currentUser != null) {\n  // \t\tgetMyEvents();\n  // \t}\n  // }, [currentUser]);\n\n  useEffect(() => {\n    setLabels(prevLabels => {\n      return [...new Set(savedEvents.map(evt => evt.label))].map(label => {\n        const currentLabel = prevLabels.find(lbl => lbl.label === label);\n        return {\n          label,\n          checked: currentLabel ? currentLabel.checked : true\n        };\n      });\n    });\n  }, [savedEvents]);\n  useEffect(() => {\n    if (smallCalendarMonth !== null) {\n      setMonthIndex(smallCalendarMonth);\n    }\n  }, [smallCalendarMonth]);\n  useEffect(() => {\n    if (!showEventModal) {\n      setSelectedEvent(null);\n    }\n  }, [showEventModal]);\n  function updateLabel(label) {\n    setLabels(labels.map(lbl => lbl.label === label.label ? label : lbl));\n  }\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      monthIndex,\n      setMonthIndex,\n      smallCalendarMonth,\n      setSmallCalendarMonth,\n      daySelected,\n      setDaySelected,\n      showEventModal,\n      setShowEventModal,\n      dispatchCalEvent,\n      selectedEvent,\n      setSelectedEvent,\n      savedEvents,\n      setLabels,\n      labels,\n      updateLabel,\n      filteredEvents,\n      savedCalendars,\n      setSavedCalendars,\n      events,\n      setEvents,\n      showSettingModal,\n      setShowSettingModal,\n      notificationSetting,\n      setNotificationSetting\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 3\n  }, this);\n}\n_s(ContextWrapper, \"xDJvojY5VmBJzKHNaWesJ4VHDVo=\");\n_c2 = ContextWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"SavedEventsReducer\");\n$RefreshReg$(_c2, \"ContextWrapper\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useMemo","useContext","GlobalContext","dayjs","EventService","AuthContext","SavedEventsReducer","state","type","payload","map","evt","id","filter","Error","initEvents","ContextWrapper","props","monthIndex","setMonthIndex","month","smallCalendarMonth","setSmallCalendarMonth","daySelected","setDaySelected","showEventModal","setShowEventModal","showSettingModal","setShowSettingModal","selectedEvent","setSelectedEvent","labels","setLabels","savedEvents","dispatchCalEvent","savedCalendars","setSavedCalendars","events","setEvents","notificationSetting","setNotificationSetting","filteredEvents","lbl","checked","label","includes","prevLabels","Set","currentLabel","find","updateLabel","children"],"sources":["/Users/omarhmdea/Documents/calendar-front/src/context/ContextWrapper.js"],"sourcesContent":["import React, {\n\tuseState,\n\tuseEffect,\n\tuseReducer,\n\tuseMemo,\n\tuseContext,\n} from \"react\";\nimport GlobalContext from \"./GlobalContext\";\nimport dayjs from \"dayjs\";\nimport EventService from \"../services/EventService\";\nimport { AuthContext } from \"./AuthContext\";\n\nconst SavedEventsReducer = (state, { type, payload }) => {\n\tswitch (type) {\n\t\tcase \"push\":\n\t\t\treturn [...state, payload];\n\t\tcase \"update\":\n\t\t\treturn state.map((evt) =>\n\t\t\t\tevt.id === payload.id ? payload : evt\n\t\t\t);\n\t\tcase \"delete\":\n\t\t\treturn state.filter((evt) => evt.id !== payload.id);\n\t\tdefault:\n\t\t\tthrow new Error();\n\t}\n};\nfunction initEvents() {\n\t//const storageEvents = localStorage.getItem(\"savedEvents\");\n\t// const parsedEvents = storageEvents ? JSON.parse(storageEvents) : [];\n\t// return parsedEvents;\n\treturn [];\n}\n\nexport default function ContextWrapper(props) {\n\tconst [monthIndex, setMonthIndex] = useState(dayjs().month());\n\tconst [smallCalendarMonth, setSmallCalendarMonth] = useState(null);\n\tconst [daySelected, setDaySelected] = useState(dayjs());\n\tconst [showEventModal, setShowEventModal] = useState(false);\n\tconst [showSettingModal, setShowSettingModal] = useState(false);\n\tconst [selectedEvent, setSelectedEvent] = useState(null);\n\tconst [labels, setLabels] = useState([]);\n\tconst [savedEvents, dispatchCalEvent] = useReducer(\n\t\tSavedEventsReducer,\n\t\t[],\n\t\tinitEvents\n\t);\n\tconst [savedCalendars, setSavedCalendars] = useState([]);\n\tconst [events, setEvents] = useState([]);\n\tconst [notificationSetting, setNotificationSetting] =\n\t\tuseState(null);\n\n\tconst filteredEvents = useMemo(() => {\n\t\treturn savedEvents.filter((evt) =>\n\t\t\tlabels\n\t\t\t\t.filter((lbl) => lbl.checked)\n\t\t\t\t.map((lbl) => lbl.label)\n\t\t\t\t.includes(evt.label)\n\t\t);\n\t}, [savedEvents, labels]);\n\n\t// useEffect(() => {\n\t// \tlocalStorage.setItem(\"savedEvents\", JSON.stringify(savedEvents));\n\t// }, [savedEvents]);\n\n\t// useEffect(() => {\n\t// \tasync function getMyEvents() {\n\t// \t\tconst response = await EventService.getMyEvents(\n\t// \t\t\t12,\n\t// \t\t\t2022,\n\t// \t\t\tcurrentUser?.token\n\t// \t\t);\n\t// \t\tconsole.log(\"My events\");\n\t// \t\tconsole.log(response);\n\t// \t\t// response.data?.data.map((evt) => {\n\t// \t\t// \tif (evt.label === undefined) {\n\t// \t\t// \t\tevt.label = \"red\";\n\t// \t\t// \t}\n\t// \t\t// });\n\t// \t\t// setLabels(response.data?.data);\n\t// \t}\n\t// \tif (currentUser != null) {\n\t// \t\tgetMyEvents();\n\t// \t}\n\t// }, [currentUser]);\n\n\tuseEffect(() => {\n\t\tsetLabels((prevLabels) => {\n\t\t\treturn [...new Set(savedEvents.map((evt) => evt.label))].map(\n\t\t\t\t(label) => {\n\t\t\t\t\tconst currentLabel = prevLabels.find(\n\t\t\t\t\t\t(lbl) => lbl.label === label\n\t\t\t\t\t);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\tchecked: currentLabel ? currentLabel.checked : true,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}, [savedEvents]);\n\n\tuseEffect(() => {\n\t\tif (smallCalendarMonth !== null) {\n\t\t\tsetMonthIndex(smallCalendarMonth);\n\t\t}\n\t}, [smallCalendarMonth]);\n\n\tuseEffect(() => {\n\t\tif (!showEventModal) {\n\t\t\tsetSelectedEvent(null);\n\t\t}\n\t}, [showEventModal]);\n\n\tfunction updateLabel(label) {\n\t\tsetLabels(\n\t\t\tlabels.map((lbl) => (lbl.label === label.label ? label : lbl))\n\t\t);\n\t}\n\n\treturn (\n\t\t<GlobalContext.Provider\n\t\t\tvalue={{\n\t\t\t\tmonthIndex,\n\t\t\t\tsetMonthIndex,\n\t\t\t\tsmallCalendarMonth,\n\t\t\t\tsetSmallCalendarMonth,\n\t\t\t\tdaySelected,\n\t\t\t\tsetDaySelected,\n\t\t\t\tshowEventModal,\n\t\t\t\tsetShowEventModal,\n\t\t\t\tdispatchCalEvent,\n\t\t\t\tselectedEvent,\n\t\t\t\tsetSelectedEvent,\n\t\t\t\tsavedEvents,\n\t\t\t\tsetLabels,\n\t\t\t\tlabels,\n\t\t\t\tupdateLabel,\n\t\t\t\tfilteredEvents,\n\t\t\t\tsavedCalendars,\n\t\t\t\tsetSavedCalendars,\n\t\t\t\tevents,\n\t\t\t\tsetEvents,\n\t\t\t\tshowSettingModal,\n\t\t\t\tsetShowSettingModal,\n\t\t\t\tnotificationSetting,\n\t\t\t\tsetNotificationSetting,\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</GlobalContext.Provider>\n\t);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}